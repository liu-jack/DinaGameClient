using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;

namespace Assets.Scripts.Model.Skill
{
    enum AttributeType
    {
        atInvalid,
		atRunSpeedBase,
		atMaxJumpCount,
		atGravityBase,
		atGravityPercent,
		atJumpSpeedBase,
		atJumpSpeedPercent,
		atCurrentLife,
		atMaxLifeBase,
		atMaxLifePercentAdd,
		atMaxLifeAdditional,
		atCurrentMana,
		atMaxManaBase,
		atMaxManaPercentAdd,
		atMaxManaAdditional,
        atSetAttackState,
        atAutoMove,
        atGeneralDamage,
        atKnockedoff,
        atCannotSkill,
        atCannotPick,
        atInvincible,
        atCurrentEndurance,
        atMaxEndurance,
        atCurrentEndurancePercent,
        atEnduranceReplenish,
        atEnduranceReplenishPercent,
        atCurrentStamina,
        atMaxStamina,
        atCurrentStaminaPercent,
        atStaminaReplenish,
        atStaminaReplenishPercent,
        atCurrentAngry,
        atMaxAngry,
        atCurrentAngryPercent,
        atAdditionalRecoveryAngry,
        atWillPower,
        atInterference,
        atInterferenceRange,
        atAttackPoint,
        atAttackPointPercent,
        atAgility,
        atCritPoint,
        atCritRate,
        atDefense,
        atDefensePointPercent,
        atDefensePercent,
        atShootBallHitRate,
        atNomalShootForce,
        atSkillShootForce,
        atSlamDunkForce,
        atAddInterferenceRangePercent,
        atAddMoveSpeedPercent,
        atExpMultiple,
        atInvisible,
        atLosecontrol,
        atForbitAutoAction,
        atCloseAiMode,
        atGrabKnockedOff,
        atGrabKnockedOffOffset,
        atShootBall,
        atAddWillPowerPercent,
        atAddInterferencePercent,
        atAddMaxStaminaPercent,
        atAddMaxEndurancePercent,
        atCallSkillScript,
        atSkillTrackMove,
        atWeakKnockDown,
        atBati,
        atTotal
    }
}
